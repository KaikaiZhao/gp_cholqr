function  funObj = build_continuous_objective_fcn(OptState, GPModel, trainx, trainy)
 
if strcmp(GPModel.kern.type, 'histIntKern') && isfield(GPModel.kern,'KFunc_byInd')

        kernMM = @(ww) GPModel.kern.KFunc_byInd(OptState.I, OptState.I, ww);
        kernMN = @(ww) GPModel.kern.KFunc_byInd(OptState.I, 1:GPModel.n, ww);

        funObj = @(hh) nvf_fixedSIS_pyHistMatchKern(hh, ...
                                                    kernMM, ...
                                                    kernMN, ...
                                                    trainy, ...
                                                    GPModel.m,...
                                                    GPModel.do_var_cost);
                                                
elseif strcmp(GPModel.kern.type, 'histIntKern')  

       iXcell = GPModel.kern.cellDataPrepFunc(trainx(OptState.I,:));
       Xcell  = GPModel.kern.cellDataPrepFunc(trainx);

       funObj = @(hh) sparse_nmll_fixedSIS_pyHistMatchKern_lowMem(hh, ...
                                                            GPModel.kern.KFunc, ... 
                                                            GPModel.kern.dKFunc_dkernhyp, ...
                                                            iXcell,...
                                                            Xcell,...
                                                            trainy, ...
                                                            GPModel.m,...
                                                            GPModel.n); 
elseif strcmp(GPModel.kern.type, 'preComputedKern') 

      funObj = @(hh) nvf_fixedSIS_preComputedKern(hh, ...
                                                trainx, ...
                                                trainy, ...
                                                OptState.I, ...
                                                GPModel.do_var_cost);  



elseif strcmp(GPModel.kern.type, 'SQExpKern')

        all_pd_cache = prepare_all_pd_cache(trainx, OptState.I);
        
        funObj = @(hh) nvf_fixedSIS(hh, ...
                                    GPModel.kern.diagKFunc,...
                                    GPModel.kern.KFunc, ...
                                    GPModel.kern.dKFunc_dkernhyp, ...
                                    trainx, ...
                                    trainy, ...
                                    OptState.I, ...
                                    GPModel.n, ...
                                    GPModel.do_var_cost, ...
                                    all_pd_cache);

else
    error('Unsupported kernel');
end
            
 
end